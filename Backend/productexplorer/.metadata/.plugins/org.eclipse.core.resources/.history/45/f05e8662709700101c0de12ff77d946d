package com.org.productexplorer.service;


import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.org.productexplorer.dao.CategoryDao;
import com.org.productexplorer.entity.Category;

@Service 
public class CategoryService {

	@Autowired
    private CategoryDao categoryDao;

    public Category create(Category category) {
        return categoryDao.save(category);
    }

    public List<Category> getAll() {
        return categoryDao.findAll();
    }

    public Category getById(Long id) {
        return categoryDao.findById(id).orElse(null);
    }

    public List<Category> findByNavigationId(Long navigationId) {
        return categoryDao.findByNavigationId(navigationId);
    }

    public List<Category> findByParentId(Long parentId) {
        return categoryDao.findByParentId(parentId);
    }
    public Category updateCategory(Long id, Category updatedCategory) {
        Optional<Category> optionalCategory = categoryDao.findById(id);
        if (!optionalCategory.isPresent()) {
            return null; 
        }

        Category existing = optionalCategory.get();
        existing.setTitle(updatedCategory.getTitle());
        existing.setSlug(updatedCategory.getSlug());
        existing.setProductCount(updatedCategory.getProductCount());
        existing.setLastScrapedAt(updatedCategory.getLastScrapedAt());
        existing.setNavigation(updatedCategory.getNavigation());
        existing.setParent(updatedCategory.getParent());

        return categoryDao.save(existing);
    }

    public boolean deleteCategory(Long id) {
        if (categoryDao.existsById(id)) {
            categoryDao.deleteById(id);
            return true;
        }
        return false;
    }

}
