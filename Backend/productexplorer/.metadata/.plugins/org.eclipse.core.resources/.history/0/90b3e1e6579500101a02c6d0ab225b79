package com.org.productexplorer.controller;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.org.productexplorer.entity.Navigation;
import com.org.productexplorer.service.Navigationservice;


@RestController
@RequestMapping("/api/navigation")
public class Navigationcontroller {
   
	@Autowired
	private Navigationservice navigationservice; 
   
	
	 @PostMapping
	    public ResponseEntity<?> saveNavigation(@RequestBody Navigation nav) {
	        Navigation saved = navigationservice.create(nav);
	        return ResponseEntity.status(HttpStatus.CREATED).body(saved);
	    }

	    @GetMapping
	    public ResponseEntity<?> findAllNavigations() {
	        return ResponseEntity.ok(navigationservice.getAll());
	    }

	    @GetMapping("/{id}")
	    public ResponseEntity<?> findNavigationById(@PathVariable Long id) {
	        Navigation nav = navigationservice.getById(id);
	        if (nav == null) {
	            return ResponseEntity.status(HttpStatus.NOT_FOUND)
	                    .body("Navigation with id " + id + " not found");
	        }
	        return ResponseEntity.ok(nav);
	    }
	    @PutMapping("/{id}")
	    public ResponseEntity<?> updateNavigation(@PathVariable Long id, @RequestBody Navigation updatedNav) {
	        Navigation nav = navigationservice.update(id, updatedNav);
	        if (nav == null) {
	            return ResponseEntity.status(HttpStatus.NOT_FOUND)
	                    .body("Navigation with id " + id + " not found");
	        }
	        return ResponseEntity.ok(nav);
	    }

	  
	    @DeleteMapping("/{id}")
	    public ResponseEntity<?> deleteNavigation(@PathVariable Long id) {
	        boolean deleted = navigationservice.delete(id);
	        if (!deleted) {
	            return ResponseEntity.status(HttpStatus.NOT_FOUND)
	                    .body("Navigation with id " + id + " not found");
	        }
	        return ResponseEntity.ok("Navigation with id " + id + " deleted successfully");
	    }
    
}
